@model PagedList.IPagedList<WebDemo.Models.Products>
@using PagedList.Mvc;

@{
    ViewBag.Title = "Index";
    Layout = "~/Views/Shared/_MyLayout.cshtml";
}

<!-- Breadcrumb Section Begin -->
<section class="breadcrumb-section set-bg" data-setbg="/Uploads/img/breadcrumb.jpg">
    <div class="container">
        <div class="row">
            <div class="col-lg-12 text-center">
                <div class="breadcrumb__text">
                    <h2>Organi Shop</h2>
                    <div class="breadcrumb__option">
                        <a href="/">Trang chủ</a>
                        <span>Shop</span>
                    </div>
                </div>
            </div>
        </div>
    </div>
</section>
<!-- Breadcrumb Section End -->
<!-- Product Section Begin -->
<section class="product spad" >
    <div class="container">
        <div class="row">
            <div class="col-lg-3 col-md-5">
                <div class="sidebar">
                    <div class="sidebar__item">
                        <h4>Các phân loại</h4>
                        <ul>
                            @{Html.RenderAction("ListCategory", "Shop");
                            }
                        </ul>
                    </div>
                    <div class="sidebar__item">
                        <h4>Giá</h4>
                        <div class="price-range-wrap">
                            <div class="price-range ui-slider ui-corner-all ui-slider-horizontal ui-widget ui-widget-content"
                                 data-min="1000" data-max="500000" id="price-range-data">
                                <div class="ui-slider-range ui-corner-all ui-widget-header"></div>
                                <span tabindex="0" class="ui-slider-handle ui-corner-all ui-state-default"></span>
                                <span tabindex="0" class="ui-slider-handle ui-corner-all ui-state-default"></span>
                            </div>
                            <div class="range-slider">
                                <div class="price-input">
                                    <input type="text" id="minamount" value="@ViewBag.MinPrice">
                                    <input type="text" id="maxamount" value="@ViewBag.MaxPrice">
                                </div>

                                <div class="Button">
                                    <button type="button" class="btn btn-danger" id="filterPrice">Lọc</button>
                                 </div>
                                </div>
                            </div>
                    </div>


                    <div class="sidebar__item">
                        @{Html.RenderAction("getLastestProduct", "Shop");
                        }
                    </div>
                </div>
            </div>
            <div class="col-lg-9 col-md-7">
                <div class="filter__item">
                    <div class="row">
                        <div class="col-lg-4 col-md-5">
                            <div class="filter__sort">
                                <span>Sắp xếp theo</span>
                                <select id="sortBySelect">
                                    <option value="newProduct" @(ViewBag.Sort == "newProduct" ? "selected" : "")>Mới nhất</option>
                                    <option value="oldProduct" @(ViewBag.Sort == "oldProduct" ? "selected" : "")>Cũ nhất</option>
                                    <option value="highPrice" @(ViewBag.Sort == "highPrice" ? "selected" : "")>Giá cao nhất</option>
                                    <option value="lowPrice" @(ViewBag.Sort == "lowPrice" ? "selected" : "")>Giá thấp nhất</option>
                                </select>
                            </div>
                        </div>
                        <div class="col-lg-4 col-md-4">
                            <div class="filter__found">
                                <h6><span>@ViewBag.TotalProduct</span> sản phẩm hiện có</h6>
                            </div>
                        </div>
                        <div class="col-lg-4 col-md-3">
                            <div class="filter__option">
                                <span class="icon_grid-2x2"></span>
                                <span class="icon_ul"></span>
                            </div>
                        </div>
                    </div>
                </div>
                <div class="row" id="productListContainer">
                    @{
                        foreach (var i in Model)
                        {
                            <div class="col-lg-4 col-md-6 col-sm-6">
                                <div class="product__item">
                                    <div class="product__item__pic set-bg" data-setbg="/Uploads/img/product/@i.img">
                                        <ul class="product__item__pic__hover">
                                            <li class="@(ViewBag.products != null && ViewBag.products.Contains(i.id) ? "favorite" : "")"><a href="@Url.Action("UpdateFavoriteProduct", "Product", new {productId = i.id, returnUrl = Request.Path})"><i class="fa fa-heart"></i></a></li>
                                            <li><a href="/@ViewBag.meta/@i.meta/@i.id"><i class="fa fa-shopping-cart"></i></a></li>
                                        </ul>
                                    </div>
                                    <div class="product__item__text">
                                        <h6><a href="/@ViewBag.meta/@i.meta/@i.id">@i.name</a></h6>
                                        <h5>@i.price VNĐ</h5>
                                    </div>
                                </div>
                            </div>
                        }
                    }
                </div>
                <div class="product__pagination d-flex justify-content-center mt-5">
                    @Html.PagedListPager(Model, page => Url.Action("Index",
     new { page, sortBy = ViewBag.CurrentSort, currentFilter = ViewBag.CurrentFilter, minPrice = ViewBag.MinPrice, maxPrice = ViewBag.MaxPrice }))
                </div>
            </div>
        </div>
    </div>
</section>
<!-- Product Section End -->

@section Scripts {
    <script>
    $(document).ready(function() {
        // Sự kiện khi thay đổi giá trị của dropdown "Sắp xếp theo"
        let linkUrl = '@Url.Action("Index", "Shop")?page=' + @ViewBag.page;
        let sortBy = '@ViewBag.Sort';
        let minPrice = '@ViewBag.MinPrice';
        let maxPrice = '@ViewBag.MaxPrice';
        let searchString = '@ViewBag.CurrentFilter';

        var rangeSlider = $(".price-range"),
            minamount = $("#minamount"),
            maxamount = $("#maxamount"),
            minPriceSlider = rangeSlider.data('min'),
            maxPriceSlider = rangeSlider.data('max');
        rangeSlider.slider({
            range: true,
            min: minPriceSlider,
            max: maxPriceSlider,
            values: [minPrice, maxPrice],
            slide: function (event, ui) {
                minamount.val(ui.values[0] + " VND");
                maxamount.val(ui.values[1] + " VND");
            }
        });

        const changeSlider = () => {
            minamount.val(rangeSlider.slider("values", 0));
            maxamount.val(rangeSlider.slider("values", 1));
            minPrice = $("#minamount").val();
            maxPrice = $("#maxamount").val();
            sortBy = $("#sortBySelect").val();
            window.location.href = linkUrl + '&sortBy=' + sortBy + '&minPrice=' + minPrice + '&maxPrice=' + maxPrice + (searchString == "" ? "" : '&currentFilter=' + searchString);
        }

        $("#sortBySelect").change(function() {
            changeSlider();
        });

        $("#filterPrice").click(function () {
            changeSlider();
        });


    });
    </script>
    <script>
        // Lấy URL của trang hiện tại
        var url = window.location.href;

        // Tìm tất cả các thẻ <a> trong thanh menu
        var links = document.querySelectorAll('.header__menu a');

        // Duyệt qua từng thẻ <a>
        links.forEach(function (link) {
            // Nếu href của thẻ <a> trùng với URL của trang hiện tại
            if (link.href === url) {
                // Thêm lớp "active" vào thẻ <a>
                link.classList.add('active');

                // Thêm lớp "active" vào thẻ cha của thẻ <a>
                var parent = link.parentElement;
                parent.classList.add('active');
            }
        });
    </script>
}